services:
  search-engine:
    image: ghcr.io/hatefsystems/search-engine-core:latest
    container_name: search-engine-core
    pull_policy: always
    restart: unless-stopped
    environment:
      - PORT=${PORT:-3000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - MONGODB_URI=${MONGODB_URI}
      - SEARCH_REDIS_URI=${SEARCH_REDIS_URI:-tcp://redis:6379}
      - SEARCH_REDIS_POOL_SIZE=${SEARCH_REDIS_POOL_SIZE:-16}
      - SEARCH_INDEX_NAME=${SEARCH_INDEX_NAME:-search_index}
      - MINIFY_JS=${MINIFY_JS:-true}
      - MINIFY_JS_LEVEL=${MINIFY_JS_LEVEL:-advanced}
      - JS_MINIFIER_SERVICE_URL=http://js-minifier:3002
      - JS_CACHE_ENABLED=${JS_CACHE_ENABLED:-true}
      - JS_CACHE_TYPE=${JS_CACHE_TYPE:-redis}
      - JS_CACHE_TTL=${JS_CACHE_TTL:-3600}
      - JS_CACHE_REDIS_DB=${JS_CACHE_REDIS_DB:-1}
      # SPA Rendering Configuration
      - SPA_RENDERING_ENABLED=${SPA_RENDERING_ENABLED:-true}
      - SPA_RENDERING_TIMEOUT=${SPA_RENDERING_TIMEOUT:-60000}
      - BROWSERLESS_URL=${BROWSERLESS_URL:-http://browserless:3000}
      - DEFAULT_REQUEST_TIMEOUT=${DEFAULT_REQUEST_TIMEOUT:-60000}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      - redis
      - mongodb
      - browserless
      - js-minifier
    stop_grace_period: 30s
    # Resource limits optimized for 8GB RAM / 4 CPU server
    deploy:
      resources:
        limits:
          memory: 3G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - search-network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "512mb", "--maxmemory-policy", "allkeys-lru"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # Resource limits optimized for 8GB RAM / 4 CPU server
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - search-network

  mongodb:
    image: mongo:7
    container_name: mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    command: ["mongod", "--bind_ip_all", "--wiredTigerCacheSizeGB", "1.5", "--maxConns", "200"]
    volumes:
      - mongodb_data:/data/db
    # Resource limits optimized for 8GB RAM / 4 CPU server
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.2'
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - search-network

  browserless:
    image: browserless/chrome:latest
    container_name: browserless
    pull_policy: if_not_present
    restart: unless-stopped
    shm_size: "512m"
    ports:
      - "3001:3000"
    environment:
      - "MAX_CONCURRENT_SESSIONS=3"
      - "PREBOOT_CHROME=true"
      - "CONNECTION_TIMEOUT=60000"
      - "CHROME_REFRESH_TIME=120000"
      - "QUEUE_LIMIT=100"
      - "MAX_CPU_PERCENT=85"
      - "MAX_MEMORY_PERCENT=85"
      - "KEEP_ALIVE=true"
      - "ENABLE_DEBUGGER=false"
      - "ENABLE_CORS=true"
      - "WORKSPACE_DIR=/workspace"
      - "FUNCTION_ENABLE_INCOGNITO=false"
      - "FUNCTION_KEEP_ALIVE=true"
      - "DEFAULT_LAUNCH_ARGS=[\"--no-sandbox\",\"--disable-setuid-sandbox\",\"--disable-dev-shm-usage\",\"--memory-pressure-off\",\"--disable-background-timer-throttling\",\"--disable-renderer-backgrounding\",\"--disable-backgrounding-occluded-windows\"]"
    # Resource limits optimized for 8GB RAM / 4 CPU server
    # deploy:
    #   resources:
    #     limits:
    #       memory: 1G
    #       cpus: '0.5'
    #     reservations:
    #       memory: 256M
    #       cpus: '0.1'
    # Health check to verify service is running
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/pressure || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # DNS settings for better connectivity
    dns:
      - 8.8.8.8
      - 1.1.1.1
      - 8.8.4.4
    # Security options
    security_opt:
      - seccomp:unconfined
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - search-network

  js-minifier:
    image: ghcr.io/hatefsystems/search-engine-core/js-minifier:latest
    container_name: js-minifier
    pull_policy: if_not_present
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3002
      - MAX_FILE_SIZE=52428800
      - MAX_CONCURRENT_REQUESTS=100
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
    ports:
      - "3002:3002"
    # Resource limits optimized for 8GB RAM / 4 CPU server
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.05'
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3002/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - search-network

networks:
  search-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:


